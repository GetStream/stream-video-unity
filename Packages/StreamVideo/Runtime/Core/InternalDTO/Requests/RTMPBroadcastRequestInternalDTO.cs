//----------------------
// <auto-generated>
//     Generated using the NSwag toolchain v13.20.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v10.0.0.0)) (http://NSwag.org)
// </auto-generated>
//----------------------

#nullable enable


using StreamVideo.Core.InternalDTO.Responses;
using StreamVideo.Core.InternalDTO.Events;
using StreamVideo.Core.InternalDTO.Models;

namespace StreamVideo.Core.InternalDTO.Requests
{
    using System = global::System;

    /// <summary>
    /// RTMPBroadcastRequest is the payload for starting an RTMP broadcast.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.20.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v10.0.0.0))")]
    internal partial class RTMPBroadcastRequestInternalDTO
    {
        /// <summary>
        /// If provided, will override the call's RTMP settings layout
        /// </summary>
        [Newtonsoft.Json.JsonProperty("layout", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public LayoutSettingsRequestInternalDTO Layout { get; set; } = default!;

        /// <summary>
        /// Name identifier for RTMP broadcast, must be unique in call
        /// </summary>
        [Newtonsoft.Json.JsonProperty("name", Required = Newtonsoft.Json.Required.Default)]
        public string Name { get; set; } = default!;

        /// <summary>
        /// If provided, will override the call's RTMP settings quality
        /// </summary>
        [Newtonsoft.Json.JsonProperty("quality", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [Newtonsoft.Json.JsonConverter(typeof(StreamVideo.Core.Serialization.EnumeratedStructConverter<RTMPBroadcastRequestQualityInternalEnumDTO>))]
        public RTMPBroadcastRequestQualityInternalEnumDTO Quality { get; set; } = default!;

        /// <summary>
        /// If provided, will be appended at the end of stream_url
        /// </summary>
        [Newtonsoft.Json.JsonProperty("stream_key", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string StreamKey { get; set; } = default!;

        /// <summary>
        /// URL for the RTMP server to send the call to
        /// </summary>
        [Newtonsoft.Json.JsonProperty("stream_url", Required = Newtonsoft.Json.Required.Default)]
        public string StreamUrl { get; set; } = default!;

    }

}

